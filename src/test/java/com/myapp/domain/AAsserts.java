package com.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAAllPropertiesEquals(A expected, A actual) {
        assertAAutoGeneratedPropertiesEquals(expected, actual);
        assertAAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAAllUpdatablePropertiesEquals(A expected, A actual) {
        assertAUpdatableFieldsEquals(expected, actual);
        assertAUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAAutoGeneratedPropertiesEquals(A expected, A actual) {
        assertThat(expected)
            .as("Verify A auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAUpdatableFieldsEquals(A expected, A actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAUpdatableRelationshipsEquals(A expected, A actual) {}
}
